https://stackoverflow.com/questions/2998455/asp-net-webmethod-returns-json-wrapped-in-quotes

-------------------------------------------------------
[System.Web.Services.WebMethod]
public static object <--- OBJECT not string 
-------------------------------------------------------

[System.Web.Services.WebMethod]
public static object CanCreateCase(MemberToClientsUpdateByTask formCollection)
{
    var message = BLL.Services.MemberByTask(formCollection);
    return message;

   // var response = new { firstname = "John", lastname = "Smith" };
   // return response;

}


[WebMethod]
public static object getData(Dictionary<string, string> d) {
    var response = new { firstname = "John", lastname="Smith" };
    return response;
}


[System.Web.Services.WebMethod]
public static string UpdateFieldTask(string command, Guid id, string userInput)
{
    return command;
}

*******************************
--- Ajax example
*******************************
$.ajax({
    type: "POST",
    url: url,
    data: data,
    contentType: "application/json; charset=utf-8",
    dataType: "text"
});

$.ajax({
    type: "POST",
    url: url,
    data: data,
    dataType: 'json',
    contentType: 'application/json',
    })
    .done(function(data){
    obj = data;console.log(obj);
});

$.ajax({
    url: url,
    dataType: 'json',
    type: 'post',
    contentType: 'application/json',
    data: data,
    success: function(data) {
        console.log('casenumbercheck:', data);
        }
});

*******************************
*******************************


[System.Web.Services.WebMethod]
    public static string AddMembersToCase(List<MemberCaseAccessLevel> memberAccessLevels)
    {
        BLL.Controllers.CaseToMembersController.AddMembersToCase(CaseGuid, memberAccessLevels);
        return "The invitation has been sent to the selected members."; 
    }

type: "POST",
url: "CaseToMembersEdit.aspx/ReinviteMemberToCase",
data: JSON.stringify({ memberAccessLevel: memberData }),
contentType: "application/json; charset=utf-8",
dataType: "text",

-------------------------------------------------------
-------------------------------------------------------


        //[POST from non-aspx page (aka API]
        if (Request.Form.Count > 0)
        {
                var formData = GetFormCollection(Request);
        }
        
        if (Request.HttpMethod == "POST")
        {
                var formData = GetFormCollection(Request);
        }


        if (Request.Form.Count > 0)
        {
                // var formData = GetFormCollection(Request);
        }
            
            
        //[POST]
        if (IsPostBack)
        {
            //-- GetFormCollection(Request)
            //--> IMSClasses.common.Tools.PostBackControl.GetPostBackControlId(Request) 
            //-- Do Task
            //-- If needed > Redirect (reload page)
        }
        
        //[GET]
        //-- Initailize all public objects()
        //-- QStringCollection
        //-- FillFormValues()
        //-- Load Data for Model > View
        
        //[Return Json]
        Response.Clear();
        Response.ContentType = "application/json; charset=utf-8";
        Response.Write(Newtonsoft.Json.JsonConvert.DeserializeObject(formData);
        Response.End();


    private object GetFormCollection(HttpRequest request)
    {
        object form = new object();
        
        if (request.HttpMethod != "POST")
                return form;

        string title = request.Form["Title"].ToStringOrDefault();
        bool active = (request.Form["Active"] == "on") ? true :false ;
        int id = request.Form["id"].ToInt32OrDefault();
        string save = request.Form["save"].ToStringOrDefault();

        return form;
    }

    private object GetQStringCollection(HttpRequest request)
    {
        ApplicantGuid = request["id"].ToGuidOrDefault();
    }
