name: Production Pipeline

on:
  [workflow_dispatch]

jobs:

  cleanup:
    needs: upload
    name: Clean files on web-server
    runs-on: [self-hosted, dh-web]
    steps:
      - name: (attempt 1) Remove APP and DATA files from final destination
        run: |
            & 'C:\serverscripts\deploymentscripts\clean-websites.ps1'

      - name: (attempt 2) Remove APP and DATA files from final destination
        if: failure()
        run: |
            & 'C:\serverscripts\deploymentscripts\clean-websites.ps1'
  
      - name: (attempt 3) Remove APP and DATA files from final destination
        if: failure()
        run: |
            & 'C:\serverscripts\deploymentscripts\clean-websites.ps1'

  deploy:
    needs: cleanup
    if: success() || failure()
    name: Replace WebPublish files to remote server
    runs-on: [self-hosted, dh-web]
    steps:
      - name: Replace APP files from final destination
        run: |
            Copy-Item -Path ${{github.workspace}}\_build\web\* -Destination c:\websites\app.${{github.event.repository.name}}.com -Recurse -Force
  
      - name: Replace DATA (api) files from final destination
        run: |
            Copy-Item -Path ${{github.workspace}}\_build\data\* -Destination c:\websites\data.${{github.event.repository.name}}.com -Recurse -Force

#   manualdeploymentmsg:
#     needs: upload
#     name: Manual development required
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "Log into server and run Powershell script"
#       - run: echo "-----------------------------------------------------"
#       - run: echo "Can not get the IIS to Stop and Start websites in GitHub Actions"
#       - run: echo "-----------------------------------------------------"
#       - run: echo "-----------------------------------------------------"
#       - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "The workflow is now ready to test your code on the runner."
#       - run: echo "This job's status is ${{ job.status }}."
