{

	"Console Log": {
		"prefix": "clog",
		"body": [
			"console.log('${CLIPBOARD}',${CLIPBOARD})"
		],
		"description": "Output to console"
	},
	"Console Log Color": {
		"prefix": "clogc",
		"body": [
			"console.log('%c ${CLIPBOARD}','background: black; color: yellow', ${CLIPBOARD});"
			// console.log('%c SumCertificateFeesTotal ', 'background: black; color: yellow');
			// console.log('%c SumCertificateFeesTotal ', 'background: red; color: white');
			// console.log('%c SumCertificateFeesTotal ', 'background: orange; color: blue');
		],
		"description": "Output to console"
	},
	"React Fragment Component for CaseJacket": {
	"prefix": "rfcc",
	"body": [
		"import React from 'react';",
		"import {Container} from 'reactstrap';",
		"",
		"interface ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Props {",
		"\ttitle: string;",
		"\tdisabled: boolean;",
		"}",
		"",
		"const ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/} = ({title, disabled}: ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Props) => {",
		"\t$1document.title = '${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}';",
		"\treturn (",
		"\t\t<React.Fragment>",
		"\t\t\t<div className='page-content'>",
		"\t\t\t<Container fluid>",
		"\t\t\t\t<div>",
		"\t\t\t\t\t<h1>${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}</h1>",
		"\t\t\t\t</div>",
		"\t\t\t</Container>",
		"\t\t\t</div>",
		"\t\t</React.Fragment>",
		"\t);",
		"};",
		"",
		"export default ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/};"
	],
	"description": "Create an empty React fragment component"
},
	"TypeScript Map": {
		"prefix": "tsmap",
		"body": [
			"{${CLIPBOARD}.map((item, key) => (",
			"\t<React.Fragment key={key}>",
			"\t\t{item.guid}",
			"\t</React.Fragment>",
			"\t))",
			"}",
		],
		"description": "TypeScript basic map function"
	},
	"TypeScript If": {
		"prefix": "tsif",
		"body": [
			"{isLoggedIn ? (",
			"\t<p>Yes</p>",
			"\t) : (",
			"\t<p>No</p>",
			")}",
		],
		"description": "TypeScript basic IF function"
	}
}
